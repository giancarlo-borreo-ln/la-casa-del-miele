package com.la_casa_del_miele.microservice_auth.config;

import com.la_casa_del_miele.microservice_auth.model.Role;
import com.la_casa_del_miele.microservice_auth.model.User;
import com.la_casa_del_miele.microservice_auth.repository.RoleRepository;
import com.la_casa_del_miele.microservice_auth.repository.UserRepository;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

import java.util.Collections;
import java.util.Optional;
import java.util.Set;

@Component
public class DataInitializer implements CommandLineRunner {

    private final UserRepository userRepository;
    private final RoleRepository roleRepository;
    private final PasswordEncoder passwordEncoder;

    public DataInitializer(UserRepository userRepository,
                           RoleRepository roleRepository,
                           PasswordEncoder passwordEncoder) {
        this.userRepository = userRepository;
        this.roleRepository = roleRepository;
        this.passwordEncoder = passwordEncoder;
    }

    @Override
    public void run(String... args) {

        if (userRepository.count() > 0) {
            return;
        }

        Role roleUser;
        Optional<Role> maybeRole = roleRepository.findByName("ROLE_USER");
        if (maybeRole.isPresent()) {
            roleUser = maybeRole.get();
        } else {
            roleUser = new Role();
            roleUser.setName("ROLE_USER");
            roleUser = roleRepository.save(roleUser);
        }

        User defaultUser = new User();
        defaultUser.setEmail("admin@admin.com");
        defaultUser.setFirstName("Admin");
        defaultUser.setLastName("Root");
        defaultUser.setPassword(passwordEncoder.encode("1234"));
        defaultUser.setRoles(Set.copyOf(Collections.singleton(roleUser)));

        userRepository.save(defaultUser);
    }
}

package com.la_casa_del_miele.microservice_auth.security;

import java.util.Collection;
import java.util.stream.Collectors;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import com.la_casa_del_miele.microservice_auth.model.User;
import com.la_casa_del_miele.microservice_auth.model.Role;

/**
 * Adatta la nostra entity User all’interfaccia UserDetails di Spring Security.
 */
public final class CustomUserDetails implements UserDetails {

    private static final long serialVersionUID = 1L;
    
    private final User user;

    public CustomUserDetails(User user) {
        this.user = user;
    }

    /* --------  UserDetails  -------- */

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return user.getRoles()
                   .stream()
                   .map(Role::getName)                       // "ROLE_USER", "ROLE_ADMIN", …
                   .map(SimpleGrantedAuthority::new)
                   .collect(Collectors.toSet());
    }

    @Override public String getPassword() { return user.getPassword(); }
    @Override public String getUsername() { return user.getEmail(); }  // autentichiamo via e-mail

    @Override public boolean isAccountNonExpired()     { return true; }
    @Override public boolean isAccountNonLocked()      { return true; }
    @Override public boolean isCredentialsNonExpired() { return true; }
    @Override public boolean isEnabled()               { return true; }

    /* --------  Getter di comodo -------- */

    public Long getId() { return user.getId(); }
    public User getUser() { return user; }
}

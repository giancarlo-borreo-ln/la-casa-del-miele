package com.la_casa_del_miele.microservice_backoffice.config;


import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.la_casa_del_miele.microservice_backoffice.service.AdminDetailsService;
@Configuration
@EnableWebSecurity
public class SecurityConfig {

	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http,
	                                               AdminDetailsService adminDetailsService) 
	        throws Exception {

	    http
	        .csrf(csrf -> csrf.disable())
	        .authorizeHttpRequests(auth -> auth
	                .requestMatchers("/api/auth/login").permitAll()
	                .requestMatchers("/api/admin/**").hasRole("ADMIN")
	                .anyRequest().authenticated())
	        .sessionManagement(sess -> sess.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
	        .oauth2ResourceServer(oauth2 -> oauth2.jwt(Customizer.withDefaults()))
	        .userDetailsService(adminDetailsService);                

	    return http.build();
	}


//    @Bean
//    public AuthenticationManager authenticationManager(AuthenticationConfiguration config) throws Exception {
//        return config.getAuthenticationManager();
//    }
	
	@Bean
	public AuthenticationManager authenticationManager(HttpSecurity http,
	                                                   AdminDetailsService adminDetailsService,
	                                                   PasswordEncoder passwordEncoder)
	        throws Exception {

	    return http.getSharedObject(
	                 org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder.class)
	               .userDetailsService(adminDetailsService)
	               .passwordEncoder(passwordEncoder)
	               .and()
	               .build();
	}
}
